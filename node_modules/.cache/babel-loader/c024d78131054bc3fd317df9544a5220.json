{"ast":null,"code":"import _slicedToArray from \"/home/valentin/Documents/LPDWEB/react/battlecat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/valentin/Documents/LPDWEB/react/battlecat/src/components/pages/Fight.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport BreedImage from \"../items/BreedImage.js\";\n\nconst Fight = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        resultFight = _useState2[0],\n        setResultFight = _useState2[1];\n\n  const headers = {\n    'x-api-key': '80ad793a-81c0-4987-a01a-cdf448c1b68d'\n  };\n  useEffect(() => {\n    console.log(props);\n    let userCat = props.location.fightProps.userCat[0];\n    let enemyCat = props.location.fightProps.enemyCat;\n    let attackingCat = \"userCat\";\n    let damages = 0;\n    console.log(userCat);\n    let interval = setInterval(() => {\n      switch (attackingCat) {\n        case \"userCat\":\n          damages = Math.floor(Math.random() * userCat.strength);\n          enemyCat.hp_max -= damages;\n          attackingCat = \"enemyCat\";\n          document.querySelector(\"#enemyHP\").textContent = enemyCat.hp_max + \" HP\";\n          break;\n\n        case \"enemyCat\":\n          damages = Math.floor(Math.random() * enemyCat.strength);\n          userCat.hp_max -= damages;\n          attackingCat = \"userCat\";\n          document.querySelector(\"#userHP\").textContent = userCat.hp_max + \" HP\";\n          break;\n\n        default:\n          break;\n      }\n\n      console.log(attackingCat);\n      console.log(damages);\n      console.log(enemyCat.hp_max);\n      console.log(userCat.hp_max);\n\n      if (userCat.hp_max <= 0 || enemyCat.hp_max <= 0) {\n        if (userCat.hp_max <= 0) {\n          setResultFight(\"lose\");\n        } else {\n          setResultFight(\"win\");\n        }\n\n        clearInterval(interval);\n      }\n    }, 500);\n  }, []);\n\n  const DisplayResult = () => {\n    if (resultFight == \"win\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Victoire\"));\n    } else if (resultFight == \"lose\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"D\\xE9faite\"));\n    } else {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Fight !!!\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"fightPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(DisplayResult, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"battleground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"userSide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, props.location.fightProps.userCat[0].name), React.createElement(\"img\", {\n    src: props.location.fightProps.userCat[0].image_url,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"userHP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.location.fightProps.userCat[0].hp_max, \" HP\"), React.createElement(\"p\", {\n    id: \"userAction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"enemySide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.location.fightProps.enemyCat.breed), React.createElement(\"img\", {\n    src: props.location.fightProps.enemyCat.image_url,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"enemyHP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, props.location.fightProps.enemyCat.hp_max, \" HP\"), React.createElement(\"p\", {\n    id: \"enemyAction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(Link, {\n    className: \"ghostButton\",\n    to: \"/search_cat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Retour\"));\n};\n\nexport default Fight;","map":{"version":3,"sources":["/home/valentin/Documents/LPDWEB/react/battlecat/src/components/pages/Fight.js"],"names":["React","useEffect","useState","axios","Switch","Route","Redirect","Link","BreedImage","Fight","props","resultFight","setResultFight","headers","console","log","userCat","location","fightProps","enemyCat","attackingCat","damages","interval","setInterval","Math","floor","random","strength","hp_max","document","querySelector","textContent","clearInterval","DisplayResult","name","image_url","breed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\n\n\nimport BreedImage from \"../items/BreedImage.js\";\n\n\nconst Fight = props => {\nconst [resultFight, setResultFight] = useState(\"\");\n\n\n\n  const headers = {\n    'x-api-key': '80ad793a-81c0-4987-a01a-cdf448c1b68d'\n  }\n\n  useEffect(() => {\n    console.log(props)\n    \n    let userCat = props.location.fightProps.userCat[0];\n    let enemyCat = props.location.fightProps.enemyCat;\n\n    let attackingCat = \"userCat\";\n    let damages = 0;\n\n    console.log(userCat)\n\n      \n\n      let interval = setInterval(() => {\n        switch (attackingCat) {\n          case \"userCat\":\n              damages = Math.floor(Math.random() * userCat.strength);\n              enemyCat.hp_max -= damages;\n              attackingCat = \"enemyCat\";\n              document.querySelector(\"#enemyHP\").textContent = enemyCat.hp_max + \" HP\";\n            break;\n          case \"enemyCat\":\n              damages = Math.floor(Math.random() * enemyCat.strength);\n              userCat.hp_max -= damages;\n              attackingCat = \"userCat\";\n              document.querySelector(\"#userHP\").textContent = userCat.hp_max + \" HP\";\n          break;\n        \n          default:\n            break;\n        }\n        console.log(attackingCat);\n        console.log(damages);\n        console.log(enemyCat.hp_max);\n        console.log(userCat.hp_max);\n\n        if (userCat.hp_max <= 0 || enemyCat.hp_max <= 0) {\n          if (userCat.hp_max <= 0) {\n            setResultFight(\"lose\");\n          } else {\n            setResultFight(\"win\");\n          }\n          clearInterval(interval);\n        }\n      }, 500)\n    \n  }, []);\n\n  const DisplayResult = () => {\n    if (resultFight == \"win\") {\n      return (\n        <div>\n          <h2>Victoire</h2>\n        </div>\n      )\n    } else if (resultFight == \"lose\") {\n      return (\n        <div>\n          <h2>Défaite</h2>\n        </div>\n      )\n    } else {\n      return (\n        <h2>Fight !!!</h2>\n      )\n    }\n  }\n\n  return (\n    <div id=\"fightPage\">\n      <DisplayResult />\n      <div id=\"battleground\">\n        <div id=\"userSide\">\n          <h3>{props.location.fightProps.userCat[0].name}</h3>\n          <img src={props.location.fightProps.userCat[0].image_url} alt=\"\"></img>\n          <p id=\"userHP\">{props.location.fightProps.userCat[0].hp_max} HP</p>\n          <p id=\"userAction\"></p>\n        </div>\n        <div id=\"enemySide\">\n          <h3>{props.location.fightProps.enemyCat.breed}</h3>\n          <img src={props.location.fightProps.enemyCat.image_url} alt=\"\"></img>\n          <p id=\"enemyHP\">{props.location.fightProps.enemyCat.hp_max} HP</p>\n          <p id=\"enemyAction\"></p>\n        </div>\n      </div>\n      \n      <Link className=\"ghostButton\" to=\"/search_cat\">Retour</Link>\n    </div>\n\n    \n  );\n};\n\nexport default Fight;"]},"metadata":{},"sourceType":"module"}