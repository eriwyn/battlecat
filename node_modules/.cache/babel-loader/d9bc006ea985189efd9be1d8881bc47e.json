{"ast":null,"code":"import _slicedToArray from \"/home/valentin/Documents/LPDWEB/react/battlecat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/valentin/Documents/LPDWEB/react/battlecat/src/components/pages/WildCat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport BreedImage from \"../items/BreedImage.js\";\n\nconst WildCat = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCat = _useState2[0],\n        setUserCat = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        enemyCat = _useState4[0],\n        setEnemyCat = _useState4[1];\n\n  const headers = {\n    'x-api-key': '80ad793a-81c0-4987-a01a-cdf448c1b68d'\n  };\n  useEffect(() => {\n    axios.get(\"http://battlecat.stark.mmi-unistra.fr/cats/\" + props.match.params.cat).then(response => {\n      setUserCat(response.data);\n    });\n    axios.get(\"https://api.thecatapi.com/v1/breeds\", {\n      headers\n    }).then(response => {\n      let breed = response.data[Math.floor(Math.random() * response.data.length)];\n      let life_span = breed.life_span.split(\" - \");\n      life_span = life_span[Math.floor(Math.random() * life_span.length)];\n      let strength = breed.weight.metric.split(\" - \");\n      strength = strength[Math.floor(Math.random() * strength.length)];\n      axios.get(\"https://api.thecatapi.com/v1/images/search?breed_ids=\" + breed.id, {\n        headers\n      }).then(response => {\n        if (response.data[0]) {\n          let image_url = response.data[0].url;\n          setEnemyCat({\n            breed: breed.name,\n            breed_id: breed.id,\n            strength: strength,\n            hp_max: life_span,\n            image_url: image_url\n          });\n        }\n      });\n      console.log(breed.id);\n    });\n  }, []);\n\n  const DisplayEnemy = () => {\n    if (enemyCat.breed_id) {\n      return React.createElement(\"div\", {\n        className: \"enemyCat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Un \", enemyCat.breed, \" sauvage appara\\xEEt.\"), React.createElement(\"img\", {\n        src: enemyCat.image_url,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Link, {\n        className: \"ghostButton\",\n        to: {\n          pathname: \"/fight\",\n          fightProps: {\n            userCat: userCat,\n            enemyCat: enemyCat\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Combattre\"), React.createElement(Link, {\n        className: \"ghostButton\",\n        to: \"/search_cat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Fuir\"));\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Chargement...\");\n    }\n  };\n\n  return React.createElement(DisplayEnemy, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  });\n};\n\nexport default WildCat;","map":{"version":3,"sources":["/home/valentin/Documents/LPDWEB/react/battlecat/src/components/pages/WildCat.js"],"names":["React","useEffect","useState","axios","Switch","Route","Redirect","Link","BreedImage","WildCat","props","userCat","setUserCat","enemyCat","setEnemyCat","headers","get","match","params","cat","then","response","data","breed","Math","floor","random","length","life_span","split","strength","weight","metric","id","image_url","url","name","breed_id","hp_max","console","log","DisplayEnemy","pathname","fightProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\n\n\nimport BreedImage from \"../items/BreedImage.js\";\n\n\nconst WildCat = props => {\n  const [userCat, setUserCat] = useState([]);\n  const [enemyCat, setEnemyCat] = useState([]);\n\n\n  const headers = {\n    'x-api-key': '80ad793a-81c0-4987-a01a-cdf448c1b68d'\n  }\n\n  useEffect(() => {\n    axios.get(\"http://battlecat.stark.mmi-unistra.fr/cats/\" + props.match.params.cat).then(response => {\n      setUserCat(response.data);\n    });\n\n    axios.get(\"https://api.thecatapi.com/v1/breeds\", {headers}).then(response => {\n      let breed = response.data[Math.floor(Math.random() * response.data.length)];\n\n      let life_span = breed.life_span.split(\" - \");\n      life_span = life_span[Math.floor(Math.random() * life_span.length)]\n\n      let strength = breed.weight.metric.split(\" - \");\n      strength = strength[Math.floor(Math.random() * strength.length)]\n\n      axios.get(\"https://api.thecatapi.com/v1/images/search?breed_ids=\" + breed.id, {headers}).then(response => {\n      if (response.data[0]) {\n        let image_url = response.data[0].url;\n\n        setEnemyCat({\n          breed: breed.name,\n          breed_id: breed.id,\n          strength: strength,\n          hp_max: life_span,\n          image_url: image_url\n        })\n\n      }\n\n      \n    });\n\n      console.log(breed.id)\n    });\n\n    \n  }, []);\n\n  const DisplayEnemy = () => {\n    if (enemyCat.breed_id) {\n      return (\n        <div className=\"enemyCat\">\n          <h2>Un {enemyCat.breed} sauvage apparaÃ®t.</h2>\n          <img src={enemyCat.image_url} alt=\"\"></img>\n          <Link className=\"ghostButton\" to={{\n            pathname: \"/fight\",\n            fightProps: {\n              userCat: userCat,\n              enemyCat: enemyCat\n            }\n          }} >Combattre</Link>\n          <Link className=\"ghostButton\" to=\"/search_cat\">Fuir</Link>\n        </div>\n      )\n    } else {\n      return (\n        <p>Chargement...</p>\n      )\n    }\n    \n  }\n\n  return (\n    <DisplayEnemy />\n\n    \n  );\n};\n\nexport default WildCat;"]},"metadata":{},"sourceType":"module"}